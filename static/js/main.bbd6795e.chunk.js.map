{"version":3,"sources":["App.tsx","components/Wrapper.tsx","components/Modal.tsx","assets/algo.svg","components/ZANCirculatingSupply.tsx","components/ZazzanAdminFund.tsx","components/Icon.tsx","components/ASAIcon.tsx","components/AssetRow.tsx","components/AccountAssets.tsx","components/Blockie.tsx","components/Header.tsx","index.tsx","scenarios.ts","components/Column.tsx","helpers/utilities.ts","components/Loader.tsx","styles.ts","helpers/api.ts","components/Button.tsx"],"names":["SLayout","styled_components__WEBPACK_IMPORTED_MODULE_2__","div","templateObject_1","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","SContent","_components_Wrapper__WEBPACK_IMPORTED_MODULE_9__","templateObject_2","SLanding","_components_Column__WEBPACK_IMPORTED_MODULE_8__","templateObject_3","SButtonContainer","templateObject_4","SConnectButton","_components_Button__WEBPACK_IMPORTED_MODULE_7__","templateObject_5","_styles__WEBPACK_IMPORTED_MODULE_13__","size","medium","SContainer","templateObject_6","SModalContainer","templateObject_7","SModalTitle","templateObject_8","SModalButton","button","templateObject_9","SModalInput","input","templateObject_10","SModalParagraph","p","templateObject_11","SBalances","templateObject_12","STable","templateObject_13","SRow","templateObject_14","SKey","templateObject_15","SValue","templateObject_16","STestButtonContainer","templateObject_17","STestButton","templateObject_18","SFooter","templateObject_19","INITIAL_STATE","connector","fetching","connected","showModal","pendingRequest","requestArg","signedTxns","pendingSubmissions","uri","accounts","address","result","chain","_helpers_api__WEBPACK_IMPORTED_MODULE_14__","TestNet","assets","zanAsset","zazzanAppAssets","zazzanAdminFundAssets","App","_super","_this","apply","this","arguments","state","walletConnectInit","_walletconnect_client__WEBPACK_IMPORTED_MODULE_3__","bridge","qrcodeModal","algorand_walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_4___default","a","setState","_a","sent","createSession","subscribeToEvents","on","error","payload","console","log","params","onSessionUpdate","onConnect","onDisconnect","killSession","resetApp","chainUpdate","newChain","getAccountAssets","_b","_scenarios__WEBPACK_IMPORTED_MODULE_18__","zazzanIndex","app","error_1","toggleModal","signTxnScenario","scenario","arg","App_this_1","argRequired_1","argRequired","Promise","resolve","reject","text","action","txnsToSign_1","flatTxns","reduce","acc","val","concat","walletTxns","map","txn","signers","authAddr","message","Buffer","from","algosdk__WEBPACK_IMPORTED_MODULE_6___default","encodeUnsignedTransaction","toString","requestParams","request","_json_rpc_tools_utils__WEBPACK_IMPORTED_MODULE_5__","sendCustomRequest","indexToGroup_1","index","group","length","groupLength","Error","signedPartialTxns_1","forEach","r","i","_c","groupIndex","toSign","undefined","push","rawSignedTxn","Uint8Array","signedPartialTxnsInternal","stxn","signedTxnInfo","signedTxn","decodeSignedTransaction","txID","unsignedTxID","sig","signingAddress","sgnr","encodeAddress","signature","formattedResult","method","body","error_2","render","react__WEBPACK_IMPORTED_MODULE_1__","maxWidth","spanHeight","_components_Header__WEBPACK_IMPORTED_MODULE_11__","center","_components_Loader__WEBPACK_IMPORTED_MODULE_12__","_components_AccountAssets__WEBPACK_IMPORTED_MODULE_15__","name","left","key","onClick","_components_ZANCirculatingSupply__WEBPACK_IMPORTED_MODULE_16__","asset","appAssets","_components_ZazzanAdminFund__WEBPACK_IMPORTED_MODULE_17__","adminFundAssets","_components_Modal__WEBPACK_IMPORTED_MODULE_10__","show","id","type","elt","document","getElementById","value","parseFloat","txnIndex","submitSignedTransaction","disabled","submissionInfo","content","prefix","prototype","confirmedRound_1","prevState","v","err_1","__webpack_exports__","fadeIn","styled_components__WEBPACK_IMPORTED_MODULE_3__","SWrapper","Wrapper","props","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2__","isRequired","defaultProps","SLightbox","offset","opacity","alpha","SHitbox","SCloseButton","_styles__WEBPACK_IMPORTED_MODULE_4__","short","color","SCard","white","SModalContent","Modal","d","window","getElementsByTagName","style","position","componentDidUpdate","lightbox","lightboxRect","getBoundingClientRect","top","ref","c","module","exports","__webpack_require__","SSpan","span","zanAssetID","_scenarios__WEBPACK_IMPORTED_MODULE_3__","tokens","filter","circSupply","total","amount","zanDecimals","Number","decimals","_helpers_utilities__WEBPACK_IMPORTED_MODULE_2__","adminFundBalance","SIcon","styled_components_browser_esm","img","tslib_es6","Icon","src","fallback","react","onError","event","target","prop_types","components_Icon","ASAIcon","assetID","components_ASAIcon","SAssetRow","AssetRow_templateObject_1","SAssetRowLeft","SAssetName","SAssetRowRight","SAssetBalance","components_AssetRow","nativeCurrencyIcon","algo_default","utilities","unitName","nativeCurrency","find","BigInt","creator","frozen","Column","token","SBlockieWrapper","Blockie","seed","toLowerCase","imgUrl","blockies","create","toDataURL","alt","components_Blockie","SHeader","Header_templateObject_1","SActiveAccount","SActiveChain","SBlockie","SAddress","styles","base","SDisconnect","Header","onChange","s","api","MainNet","stringToChainType","GlobalStyle","_styles__WEBPACK_IMPORTED_MODULE_5__","react_dom__WEBPACK_IMPORTED_MODULE_2__","_App__WEBPACK_IMPORTED_MODULE_4__","testAccounts","algosdk__WEBPACK_IMPORTED_MODULE_1___default","mnemonicToSecretKey","signTxnWithTestAccount","sender","publicKey","_i","testAccounts_1","testAccount","addr","signTxn","sk","getUSDCIndex","_helpers_api__WEBPACK_IMPORTED_MODULE_2__","getZANIndex","getZazzanAppIndex","getZazzanAppAddress","getZazzanAdminFundAddress","adminFund64","o","bytes","raw","atob","rawLength","array","ArrayBuffer","charCodeAt","singleAssetOptInTxn","getAssetIndex","assetName","suggestedParams","assetIndex","makeAssetTransferTxnWithSuggestedParamsFromObject","to","note","singleUSDCtoZAN","zazzanAddress","ZANIndex","USDCIndex","txn1","txn2","makeApplicationNoOpTxnFromObject","appIndex","foreignAssets","appArgs","assignGroupID","toByte","singleZANtoUSDC","adminFund","scenarios","SColumn","formatBigNumWithDecimals","num","singleUnit","repeat","fractionalUnits","padStart","load","SLoader","svg","Loader","rgb","viewBox","stroke","strokeWidth","fill","fillRule","x","y","width","height","rx","colors","fonts","transitions","shadows","globalStyle","black","dark","grey","darkGrey","lightGrey","blue","lightBlue","yellow","orange","green","pink","red","purple","tiny","small","large","h1","h2","h3","h4","h5","h6","weight","normal","semibold","bold","extrabold","family","OpenSans","long","soft","big","hover","ChainType","mainNetClient","Algodv2","testNetClient","clientForChain","apiGetAccountAssets","client","accountInformation","setIntDecoding","IntDecoding","BIGINT","do","accountInfo","algoBalance","assetsFromRes","sort","b","all","getAssetByID","url","unshift","apiGetAssetByID","aid","apiGetApplicationByID","getApplicationByID","apiGetTxnParams","getTransactionParams","apiSubmitTransactions","stxns","sendRawTransaction","txId","waitForTransaction","status","lastStatus","lastRound","pendingTransactionInformation","statusAfterBlock","SHoverLayer","SButton","outline","icon","Button","_Loader__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"static/js/main.bbd6795e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\nimport { IInternalEvent } from \"@walletconnect/types\";\nimport { formatJsonRpcRequest } from \"@json-rpc-tools/utils\";\nimport algosdk from \"algosdk\";\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport { fonts } from \"./styles\";\nimport { apiGetAccountAssets, apiGetAssetByID, apiSubmitTransactions, ChainType, apiGetApplicationByID } from \"./helpers/api\";\nimport { IAssetData, IWalletTransaction, SignTxnParams } from \"./helpers/types\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport ZANCirculatingSupply from \"./components/ZANCirculatingSupply\";\nimport ZazzanAdminFund from \"./components/ZazzanAdminFund\";\nimport { Scenario, scenarios, signTxnWithTestAccount, getZANIndex, getZazzanAppIndex, getZazzanAppAddress, getZazzanAdminFundAddress } from \"./scenarios\";\n\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  /* height: 100%; */\n  min-height: 100vh;\n  text-align: center;\n`;\n\nconst SContent = styled(Wrapper as any)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n\nconst SLanding = styled(Column as any)`\n  height: 600px;\n`;\n\nconst SButtonContainer = styled(Column as any)`\n  width: 250px;\n  margin: 50px 0;\n`;\n\nconst SConnectButton = styled(Button as any)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 70px;\n  width: 100%;\n  margin: 12px 0;\n`;\n\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst SModalButton = styled.button`\n  margin: 1em 0;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst SModalInput = styled.input`\n  border: 1px solid #000;\n  border-radius: 10px;\n  padding: 10px;\n  margin: 5px;\n  width: 150px;\n  box-sizing: border-box;\n`;\n\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`;\n\n// @ts-ignore\nconst SBalances = styled(SLanding as any)`\n  height: 100%;\n  & h3 {\n    padding-top: 10px;\n  }\n`;\n\nconst STable = styled(SContainer as any)`\n  flex-direction: column;\n  text-align: left;\n`;\n\nconst SRow = styled.div`\n  width: 100%;\n  display: flex;\n  margin: 6px 0;\n`;\n\nconst SKey = styled.div`\n  width: 30%;\n  font-weight: 700;\n`;\n\nconst SValue = styled.div`\n  width: 70%;\n  font-family: monospace;\n`;\n\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst STestButton = styled(Button as any)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 64px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n\nconst SFooter = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n`;\n\ninterface IResult {\n  method: string;\n  body: Array<\n    Array<{\n      txID: string;\n      signingAddress?: string;\n      signature: string;\n    } | null>\n  >;\n}\n\ninterface IAppState {\n  connector: WalletConnect | null;\n  fetching: boolean;\n  connected: boolean;\n  showModal: boolean;\n  pendingRequest: boolean;\n  requestArg: { text : string, resolve : (value : number) => void } | null;\n  signedTxns: Uint8Array[][] | null;\n  pendingSubmissions: Array<number | Error>;\n  uri: string;\n  accounts: string[];\n  address: string;\n  result: IResult | null;\n  chain: ChainType;\n  assets: IAssetData[];\n  zanAsset: Record<string, any> | null;\n  zazzanAppAssets: IAssetData[];\n  zazzanAdminFundAssets: IAssetData[];\n}\n\nconst INITIAL_STATE: IAppState = {\n  connector: null,\n  fetching: false,\n  connected: false,\n  showModal: false,\n  pendingRequest: false,\n  requestArg: null,\n  signedTxns: null,\n  pendingSubmissions: [],\n  uri: \"\",\n  accounts: [],\n  address: \"\",\n  result: null,\n  chain: ChainType.TestNet,\n  assets: [],\n  zanAsset: null,\n  zazzanAppAssets: [],\n  zazzanAdminFundAssets: [],\n};\n\nclass App extends React.Component<unknown, IAppState> {\n  public state: IAppState = {\n    ...INITIAL_STATE,\n  };\n\n  public walletConnectInit = async () => {\n    // bridge url\n    const bridge = \"https://bridge.walletconnect.org\";\n\n    // create new connector\n    const connector = new WalletConnect({ bridge, qrcodeModal: QRCodeModal });\n\n    await this.setState({ connector });\n\n    // check if already connected\n    if (!connector.connected) {\n      // create new session\n      await connector.createSession();\n    }\n\n    // subscribe to events\n    await this.subscribeToEvents();\n  };\n  public subscribeToEvents = () => {\n    const { connector } = this.state;\n\n    if (!connector) {\n      return;\n    }\n\n    connector.on(\"session_update\", async (error, payload) => {\n      console.log(`connector.on(\"session_update\")`);\n\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n      this.onSessionUpdate(accounts);\n    });\n\n    connector.on(\"connect\", (error, payload) => {\n      console.log(`connector.on(\"connect\")`);\n\n      if (error) {\n        throw error;\n      }\n\n      this.onConnect(payload);\n    });\n\n    connector.on(\"disconnect\", (error, payload) => {\n      console.log(`connector.on(\"disconnect\")`);\n\n      if (error) {\n        throw error;\n      }\n\n      this.onDisconnect();\n    });\n\n    if (connector.connected) {\n      const { accounts } = connector;\n      const address = accounts[0];\n      this.setState({\n        connected: true,\n        accounts,\n        address,\n      });\n      this.onSessionUpdate(accounts);\n    }\n\n    this.setState({ connector });\n  };\n\n  public killSession = async () => {\n    const { connector } = this.state;\n    if (connector) {\n      connector.killSession();\n    }\n    this.resetApp();\n  };\n\n  public chainUpdate = (newChain: ChainType) => {\n    this.setState({ chain: newChain }, this.getAccountAssets);\n  };\n\n  public resetApp = async () => {\n    await this.setState({ ...INITIAL_STATE });\n  };\n\n  public onConnect = async (payload: IInternalEvent) => {\n    const { accounts } = payload.params[0];\n    const address = accounts[0];\n    await this.setState({\n      connected: true,\n      accounts,\n      address,\n    });\n    this.getAccountAssets();\n  };\n\n  public onDisconnect = async () => {\n    this.resetApp();\n  };\n\n  public onSessionUpdate = async (accounts: string[]) => {\n    const address = accounts[0];\n    await this.setState({ accounts, address });\n    await this.getAccountAssets();\n  };\n\n  public getAccountAssets = async () => {\n    const { address, chain } = this.state;\n    this.setState({ fetching: true });\n    try {\n      // get account balances\n      const assets = await apiGetAccountAssets(chain, address);\n      const zanAsset = await apiGetAssetByID(chain, getZANIndex(chain));\n      const zazzanAppAssets = await apiGetAccountAssets(chain, getZazzanAppAddress(chain));\n      const zazzanIndex = getZazzanAppIndex(chain);\n      const app = await apiGetApplicationByID(chain, zazzanIndex);\n      const zazzanAdminFundAssets = await apiGetAccountAssets(chain, getZazzanAdminFundAddress(app));\n      await this.setState({ fetching: false, address, assets, zanAsset, zazzanAppAssets, zazzanAdminFundAssets });\n    } catch (error) {\n      console.error(error);\n      await this.setState({ fetching: false });\n    }\n  };\n\n  public toggleModal = () =>\n    this.setState({\n      showModal: !this.state.showModal,\n      pendingSubmissions: [],\n    });\n\n  public signTxnScenario = async (scenario: Scenario) => {\n    const { connector, address, chain } = this.state;\n\n    if (!connector) {\n      return;\n    }\n\n    try {\n      let arg : number | null = null;\n      const App_this = this;\n      const argRequired = scenario.argRequired;\n      if (argRequired != null) {\n          arg = await new Promise((resolve : (value: number | PromiseLike<number | null> | null) => void,\n                                   reject : (reason?: any) => void) => {\n              // open modal\n              this.toggleModal();\n        \n              // toggle pending request indicator\n              App_this.setState({ requestArg: {\n                  text : argRequired,\n                  resolve\n                }});\n          });\n          this.toggleModal();\n          this.setState({ requestArg: null });\n      }\n\n      const txnsToSign = await scenario.action(chain, address, arg);\n\n      // open modal\n      this.toggleModal();\n\n      // toggle pending request indicator\n      this.setState({ pendingRequest: true });\n\n      const flatTxns = txnsToSign.reduce((acc, val) => acc.concat(val), []);\n\n      const walletTxns: IWalletTransaction[] = flatTxns.map(\n        ({ txn, signers, authAddr, message }) => ({\n          txn: Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString(\"base64\"),\n          signers, // TODO: put auth addr in signers array\n          authAddr,\n          message,\n        }),\n      );\n\n      // sign transaction\n      const requestParams: SignTxnParams = [walletTxns];\n      const request = formatJsonRpcRequest(\"algo_signTxn\", requestParams);\n      const result: Array<string | null> = await connector.sendCustomRequest(request);\n\n      console.log(\"Raw response:\", result);\n\n      const indexToGroup = (index: number) => {\n        for (let group = 0; group < txnsToSign.length; group++) {\n          const groupLength = txnsToSign[group].length;\n          if (index < groupLength) {\n            return [group, index];\n          }\n\n          index -= groupLength;\n        }\n\n        throw new Error(`Index too large for groups: ${index}`);\n      };\n\n      const signedPartialTxns: Array<Array<Uint8Array | null>> = txnsToSign.map(() => []);\n      result.forEach((r, i) => {\n        const [group, groupIndex] = indexToGroup(i);\n        const toSign = txnsToSign[group][groupIndex];\n\n        if (r == null) {\n          if (toSign.signers !== undefined && toSign.signers?.length < 1) {\n            signedPartialTxns[group].push(null);\n            return;\n          }\n          throw new Error(`Transaction at index ${i}: was not signed when it should have been`);\n        }\n\n        if (toSign.signers !== undefined && toSign.signers?.length < 1) {\n          throw new Error(`Transaction at index ${i} was signed when it should not have been`);\n        }\n\n        const rawSignedTxn = Buffer.from(r, \"base64\");\n        signedPartialTxns[group].push(new Uint8Array(rawSignedTxn));\n      });\n\n      const signedTxns: Uint8Array[][] = signedPartialTxns.map(\n        (signedPartialTxnsInternal, group) => {\n          return signedPartialTxnsInternal.map((stxn, groupIndex) => {\n            if (stxn) {\n              return stxn;\n            }\n\n            return signTxnWithTestAccount(txnsToSign[group][groupIndex].txn);\n          });\n        },\n      );\n\n      const signedTxnInfo: Array<Array<{\n        txID: string;\n        signingAddress?: string;\n        signature: string;\n      } | null>> = signedPartialTxns.map((signedPartialTxnsInternal, group) => {\n        return signedPartialTxnsInternal.map((rawSignedTxn, i) => {\n          if (rawSignedTxn == null) {\n            return null;\n          }\n\n          const signedTxn = algosdk.decodeSignedTransaction(rawSignedTxn);\n          const txn = (signedTxn.txn as unknown) as algosdk.Transaction;\n          const txID = txn.txID();\n          const unsignedTxID = txnsToSign[group][i].txn.txID();\n\n          if (txID !== unsignedTxID) {\n            throw new Error(\n              `Signed transaction at index ${i} differs from unsigned transaction. Got ${txID}, expected ${unsignedTxID}`,\n            );\n          }\n\n          if (!signedTxn.sig) {\n            throw new Error(`Signature not present on transaction at index ${i}`);\n          }\n\n          return {\n            txID,\n            signingAddress: signedTxn.sgnr ? algosdk.encodeAddress(signedTxn.sgnr) : undefined,\n            signature: Buffer.from(signedTxn.sig).toString(\"base64\"),\n          };\n        });\n      });\n\n      console.log(\"Signed txn info:\", signedTxnInfo);\n\n      // format displayed result\n      const formattedResult: IResult = {\n        method: \"algo_signTxn\",\n        body: signedTxnInfo,\n      };\n\n      // display result\n      this.setState({\n        connector,\n        pendingRequest: false,\n        signedTxns,\n        result: formattedResult,\n      });\n    } catch (error) {\n      console.error(error);\n      this.setState({ connector, pendingRequest: false, result: null });\n    }\n  };\n\n  public async submitSignedTransaction() {\n    const { signedTxns, chain } = this.state;\n    if (signedTxns == null) {\n      throw new Error(\"Transactions to submit are null\");\n    }\n\n    this.setState({ pendingSubmissions: signedTxns.map(() => 0) });\n\n    signedTxns.forEach(async (signedTxn, index) => {\n      try {\n        const confirmedRound = await apiSubmitTransactions(chain, signedTxn);\n\n        this.setState(prevState => {\n          return {\n            pendingSubmissions: prevState.pendingSubmissions.map((v, i) => {\n              if (index === i) {\n                return confirmedRound;\n              }\n              return v;\n            }),\n          };\n        });\n\n        console.log(`Transaction confirmed at round ${confirmedRound}`);\n      } catch (err) {\n        this.setState(prevState => {\n          return {\n            pendingSubmissions: prevState.pendingSubmissions.map((v, i) => {\n              if (index === i) {\n                return err;\n              }\n              return v;\n            }),\n          };\n        });\n\n        console.error(`Error submitting transaction at index ${index}:`, err);\n      }\n    });\n  }\n\n  public render = () => {\n    const {\n      chain,\n      assets,\n      address,\n      connected,\n      fetching,\n      showModal,\n      pendingRequest,\n      pendingSubmissions,\n      result,\n      zanAsset,\n      zazzanAppAssets,\n      requestArg,\n      zazzanAdminFundAssets,\n    } = this.state;\n    return (\n      <SLayout>\n        <Column maxWidth={1000} spanHeight>\n          <Header\n            connected={connected}\n            address={address}\n            killSession={this.killSession}\n            chain={chain}\n            chainUpdate={this.chainUpdate}\n          />\n          <SContent>\n            {!address && (!assets.length || zanAsset == null || !zazzanAppAssets.length) ? (\n              <SLanding center>\n                <h3>{`Zazzan Web App v${process.env.REACT_APP_VERSION}`}</h3>\n                <SButtonContainer>\n                  <SConnectButton left onClick={this.walletConnectInit} fetching={fetching}>\n                    {\"Connect to your Algorand wallet\"}\n                  </SConnectButton>\n                </SButtonContainer>\n              </SLanding>\n            ) : (\n              <SBalances>\n                <h3>Balances</h3>\n                {!fetching ? (\n                  <AccountAssets assets={assets} />\n                ) : (\n                  <Column center>\n                    <SContainer>\n                      <Loader />\n                    </SContainer>\n                  </Column>\n                )}\n                <h3>Actions</h3>\n                <Column center>\n                  <STestButtonContainer>\n                    {scenarios.map(({ name, scenario }) => (\n                      <STestButton left key={name} onClick={() => this.signTxnScenario(scenario)}>\n                        {name}\n                      </STestButton>\n                    ))}\n                  </STestButtonContainer>\n                </Column>\n                {\n                   zanAsset != null && (\n                        <SFooter>\n                          <ZANCirculatingSupply asset={zanAsset} appAssets={zazzanAppAssets} chain={chain}/>\n                          <ZazzanAdminFund asset={zanAsset} adminFundAssets={zazzanAdminFundAssets} chain={chain}/>\n                        </SFooter>\n                      )\n                }\n              </SBalances>\n            )}\n          </SContent>\n        </Column>\n        <Modal show={showModal} toggleModal={this.toggleModal}>\n          {pendingRequest ? (\n            <SModalContainer>\n              <SModalTitle>{\"Pending Call Request\"}</SModalTitle>\n              <SContainer>\n                <Loader />\n                <SModalParagraph>{\"Approve or reject request using your wallet\"}</SModalParagraph>\n              </SContainer>\n            </SModalContainer>\n          ) : requestArg != null ? (\n            <SModalContainer>\n              <SModalTitle>{\"Please enter \"+(requestArg != null ? requestArg.text : \"\")}</SModalTitle>\n              <div><SModalInput id=\"myarg\" type=\"text\"/></div>\n              <SModalButton\n                onClick={() => {\n                    const elt = document.getElementById(\"myarg\") as HTMLInputElement;\n                    const text = elt == null ? \"\" : elt.value;\n                    requestArg.resolve(text == null ? 0 : parseFloat(text));\n                }}\n              >\n                {\"Continue\"}\n              </SModalButton>\n            </SModalContainer>\n          ) : result ? (\n            <SModalContainer>\n              <SModalTitle>{\"Call Request Approved\"}</SModalTitle>\n              <STable>\n                <SRow>\n                  <SKey>Method</SKey>\n                  <SValue>{result.method}</SValue>\n                </SRow>\n                {result.body.map((signedTxns, index) => (\n                  <SRow key={index}>\n                    <SKey>{`Atomic group ${index}`}</SKey>\n                    <SValue>\n                      {signedTxns.map((txn, txnIndex) => (\n                        <div key={txnIndex}>\n                          {!!txn?.txID && <p>TxID: {txn.txID}</p>}\n                          {!!txn?.signature && <p>Sig: {txn.signature}</p>}\n                          {!!txn?.signingAddress && <p>AuthAddr: {txn.signingAddress}</p>}\n                        </div>\n                      ))}\n                    </SValue>\n                  </SRow>\n                ))}\n              </STable>\n              <SModalButton\n                onClick={() => this.submitSignedTransaction()}\n                disabled={pendingSubmissions.length !== 0}\n              >\n                {\"Submit transaction to network.\"}\n              </SModalButton>\n              {pendingSubmissions.map((submissionInfo, index) => {\n                const key = `${index}:${\n                  typeof submissionInfo === \"number\" ? submissionInfo : \"err\"\n                }`;\n                const prefix = `Txn Group ${index}: `;\n                let content: string;\n\n                if (submissionInfo === 0) {\n                  content = \"Submitting...\";\n                } else if (typeof submissionInfo === \"number\") {\n                  content = `Confirmed at round ${submissionInfo}`;\n                } else {\n                  content = \"Rejected by network. See console for more information.\";\n                }\n\n                return <SModalTitle key={key}>{prefix + content}</SModalTitle>;\n              })}\n            </SModalContainer>\n          ) : (\n            <SModalContainer>\n              <SModalTitle>{\"Call Request Rejected\"}</SModalTitle>\n            </SModalContainer>\n          )}\n        </Modal>\n      </SLayout>\n    );\n  };\n}\n\nexport default App;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\ninterface IWrapperStyleProps {\n  center: boolean;\n}\n\nconst SWrapper = styled.div<IWrapperStyleProps>`\n  will-change: transform, opacity;\n  animation: ${fadeIn} 0.7s ease 0s normal 1;\n  min-height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: ${({ center }) => (center ? `center` : `flex-start`)};\n`;\n\ninterface IWrapperProps extends IWrapperStyleProps {\n  children: React.ReactNode;\n}\n\nconst Wrapper = (props: IWrapperProps) => {\n  const { children, center } = props;\n  return (\n    <SWrapper {...props} center={center}>\n      {children}\n    </SWrapper>\n  );\n};\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  center: PropTypes.bool,\n};\n\nWrapper.defaultProps = {\n  center: false,\n};\n\nexport default Wrapper;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors, transitions } from \"../styles\";\n\ninterface ILightboxStyleProps {\n  show: boolean;\n  offset: number;\n  opacity?: number;\n}\n\nconst SLightbox = styled.div<ILightboxStyleProps>`\n  transition: opacity 0.1s ease-in-out;\n  text-align: center;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({ offset }) => (offset ? `-${offset}px` : 0)};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({ opacity }) => {\n    let alpha = 0.4;\n    if (typeof opacity === \"number\") {\n      alpha = opacity;\n    }\n    return `rgba(0, 0, 0, ${alpha})`;\n  }};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\ninterface ICloseButtonStyleProps {\n  size: number;\n  color: string;\n  onClick?: any;\n}\n\nconst SCloseButton = styled.div<ICloseButtonStyleProps>`\n  transition: ${transitions.short};\n  position: absolute;\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  right: ${({ size }) => `${size / 1.6667}px`};\n  top: ${({ size }) => `${size / 1.6667}px`};\n  opacity: 0.5;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    content: \" \";\n    height: ${({ size }) => `${size}px`};\n    width: 2px;\n    background: ${({ color }) => `rgb(${colors[color]})`};\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n\nconst SCard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  padding: 25px;\n  background-color: rgb(${colors.white});\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContent = styled.div`\n  position: relative;\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\ninterface IModalState {\n  offset: number;\n}\n\ninterface IModalProps {\n  children: React.ReactNode;\n  show: boolean;\n  toggleModal: any;\n  opacity?: number;\n}\n\nconst INITIAL_STATE: IModalState = {\n  offset: 0,\n};\n\nclass Modal extends React.Component<IModalProps, IModalState> {\n  public static propTypes = {\n    children: PropTypes.node.isRequired,\n    show: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    opacity: PropTypes.number,\n  };\n\n  public lightbox?: HTMLDivElement | null;\n\n  public state: IModalState = {\n    ...INITIAL_STATE,\n  };\n\n  public componentDidUpdate() {\n    if (this.lightbox) {\n      const lightboxRect = this.lightbox.getBoundingClientRect();\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\n        this.setState({ offset });\n      }\n    }\n  }\n\n  public toggleModal = async () => {\n    const d = typeof window !== \"undefined\" ? document : \"\";\n    const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\n    if (body) {\n      if (this.props.show) {\n        body.style.position = \"\";\n      } else {\n        body.style.position = \"fixed\";\n      }\n    }\n    this.props.toggleModal();\n  };\n\n  public render() {\n    const { offset } = this.state;\n    const { children, show, opacity } = this.props;\n    return (\n      <SLightbox show={show} offset={offset} opacity={opacity} ref={c => (this.lightbox = c)}>\n        <SModalContainer>\n          <SHitbox onClick={this.toggleModal} />\n\n          <SCard>\n            <SCloseButton size={25} color={\"dark\"} onClick={this.toggleModal} />\n            <SModalContent>{children}</SModalContent>\n          </SCard>\n        </SModalContainer>\n      </SLightbox>\n    );\n  }\n}\n\nexport default Modal;\n","module.exports = __webpack_public_path__ + \"static/media/algo.6c6f52b0.svg\";","import * as React from \"react\";\nimport { formatBigNumWithDecimals } from \"../helpers/utilities\";\nimport { IAssetData } from \"../helpers/types\";\nimport { getZANIndex } from \"../scenarios\";\nimport { ChainType } from \"../helpers/api\";\nimport styled from \"styled-components\";\n\nconst SSpan = styled.span`\n`;\n\nconst ZANCirculatingSupply = (props: { asset: Record<string, any>, appAssets: IAssetData[], chain: ChainType }) => {\n  const { asset, appAssets, chain } = props;\n  const zanAssetID = getZANIndex(chain);\n  const tokens = appAssets.filter((asset: IAssetData) => asset && asset.id === zanAssetID);\n\n  const circSupply = asset.params.total - tokens[0].amount;\n  const zanDecimals = Number(asset.params.decimals);\n\n  return (\n      <SSpan>circulating supply:&nbsp;\n          {`${formatBigNumWithDecimals(circSupply, zanDecimals)} ${asset.params[\"unit-name\"] || \"units\"}`}\n      </SSpan>\n    )\n}\n\nexport default ZANCirculatingSupply;\n","import * as React from \"react\";\nimport { formatBigNumWithDecimals } from \"../helpers/utilities\";\nimport { IAssetData } from \"../helpers/types\";\nimport { getZANIndex } from \"../scenarios\";\nimport { ChainType } from \"../helpers/api\";\nimport styled from \"styled-components\";\n\nconst SSpan = styled.span`\n`;\n\nconst ZazzanAdminFund = (props: { asset: Record<string, any>, adminFundAssets: IAssetData[], chain: ChainType }) => {\n  const { asset, adminFundAssets, chain } = props;\n  const zanAssetID = getZANIndex(chain);\n  const tokens = adminFundAssets.filter((asset: IAssetData) => asset && asset.id === zanAssetID);\n\n  const adminFundBalance = tokens[0].amount;\n  const zanDecimals = Number(asset.params.decimals);\n\n  return (\n      <SSpan>admin fund balance:&nbsp;\n          {`${formatBigNumWithDecimals(adminFundBalance, zanDecimals)} ${asset.params[\"unit-name\"] || \"units\"}`}\n      </SSpan>\n    )\n}\n\nexport default ZazzanAdminFund;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\ninterface IIconStyleProps {\n  size: number;\n}\n\nconst SIcon = styled.img<IIconStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n`;\n\nconst Icon = (props: any) => {\n  const { src, fallback, size } = props;\n  return (\n    <SIcon\n      {...props}\n      src={src}\n      size={size}\n      onError={(event: any) => {\n        if (fallback) {\n          event.target.src = fallback;\n        }\n      }}\n    />\n  );\n};\n\nIcon.propTypes = {\n  src: PropTypes.string,\n  fallback: PropTypes.string,\n  size: PropTypes.number,\n};\n\nIcon.defaultProps = {\n  src: null,\n  fallback: \"\",\n  size: 20,\n};\n\nexport default Icon;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Icon from \"./Icon\";\n\nconst ASAIcon = (props: { assetID: number }) => {\n  const src = `https://algoexplorer.io/images/assets/big/light/${props.assetID}.png`;\n  return <Icon src={src} />;\n};\n\nASAIcon.propTypes = {\n  assetID: PropTypes.number,\n  size: PropTypes.number,\n};\n\nASAIcon.defaultProps = {\n  assetID: 0,\n  size: 20,\n};\n\nexport default ASAIcon;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"./Icon\";\nimport ASAIcon from \"./ASAIcon\";\nimport algo from \"../assets/algo.svg\";\nimport { formatBigNumWithDecimals } from \"../helpers/utilities\";\nimport { IAssetData } from \"../helpers/types\";\n\nconst SAssetRow = styled.div`\n  width: 100%;\n  padding: 5px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst SAssetRowLeft = styled.div`\n  display: flex;\n`;\nconst SAssetName = styled.div`\n  display: flex;\n  margin-left: 10px;\n`;\nconst SAssetRowRight = styled.div`\n  display: flex;\n`;\nconst SAssetBalance = styled.div`\n  display: flex;\n`;\n\nconst AssetRow = (props: { asset: IAssetData }) => {\n  const { asset } = props;\n  const nativeCurrencyIcon = asset.id === 0 ? algo : null;\n  return (\n    <SAssetRow {...props}>\n      <SAssetRowLeft>\n        {nativeCurrencyIcon ? <Icon src={nativeCurrencyIcon} /> : <ASAIcon assetID={asset.id} />}\n        <SAssetName>{asset.name}</SAssetName>\n      </SAssetRowLeft>\n      <SAssetRowRight>\n        <SAssetBalance>\n          {`${formatBigNumWithDecimals(asset.amount, asset.decimals)} ${asset.unitName || \"units\"}`}\n        </SAssetBalance>\n      </SAssetRowRight>\n    </SAssetRow>\n  );\n};\n\nexport default AssetRow;\n","import * as React from \"react\";\nimport Column from \"./Column\";\nimport AssetRow from \"./AssetRow\";\nimport { IAssetData } from \"../helpers/types\";\n\nconst AccountAssets = (props: { assets: IAssetData[] }) => {\n  const { assets } = props;\n\n  const nativeCurrency = assets.find((asset: IAssetData) => asset && asset.id === 0) || {\n    id: 0,\n    amount: BigInt(0),\n    creator: \"\",\n    frozen: false,\n    decimals: 6,\n    name: \"Algo\",\n    unitName: \"Algo\",\n  };\n\n  const tokens = assets.filter((asset: IAssetData) => asset && asset.id !== 0);\n\n  return (\n    <Column center>\n      <AssetRow key={nativeCurrency.id} asset={nativeCurrency} />\n      {tokens.map(token => (\n        <AssetRow key={token.id} asset={token} />\n      ))}\n    </Column>\n  );\n};\n\nexport default AccountAssets;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IBlockieStyleProps {\n  size?: number;\n}\n\ninterface IBlockieProps extends IBlockieStyleProps {\n  address: string;\n}\n\nconst SBlockieWrapper = styled.div<IBlockieStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  overflow: hidden;\n  & img {\n    width: 100%;\n  }\n`;\n\nconst Blockie = (props: IBlockieProps) => {\n  const seed = props.address.toLowerCase() || \"\";\n  const imgUrl = window.blockies\n    .create({\n      seed,\n    })\n    .toDataURL();\n  return (\n    <SBlockieWrapper {...props} size={props.size}>\n      <img src={imgUrl} alt={props.address} />\n    </SBlockieWrapper>\n  );\n};\n\nBlockie.defaultProps = {\n  address: \"0x0000000000000000000000000000000000000000\",\n  size: 30,\n};\n\nexport default Blockie;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport * as PropTypes from \"prop-types\";\nimport Blockie from \"./Blockie\";\n// import { ellipseAddress } from \"../helpers/utilities\";\nimport { transitions } from \"../styles\";\nimport { ChainType } from \"src/helpers/api\";\n\nconst SHeader = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n`;\n\nconst SActiveAccount = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-weight: 400;\n`;\n\nconst SActiveChain = styled(SActiveAccount as any)`\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  & p {\n    font-size: 0.8em;\n    margin: 0;\n    padding: 0;\n  }\n  & p:nth-child(2) {\n    font-weight: bold;\n  }\n`;\n\nconst SBlockie = styled(Blockie as any)`\n  margin-right: 10px;\n`;\n\ninterface IHeaderStyle {\n  connected: boolean;\n}\n\nconst SAddress = styled.p<IHeaderStyle>`\n  transition: ${transitions.base};\n  //font-weight: bold;\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\n`;\n\nconst SDisconnect = styled.div<IHeaderStyle>`\n  transition: ${transitions.button};\n  font-size: 12px;\n  font-family: monospace;\n  position: absolute;\n  right: 0;\n  top: 20px;\n  opacity: 0.7;\n  cursor: pointer;\n\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.5;\n  }\n`;\n\ninterface IHeaderProps {\n  killSession: () => unknown;\n  connected: boolean;\n  address: string;\n  chain: ChainType;\n  chainUpdate: (newChain: ChainType) => unknown;\n}\n\nfunction stringToChainType(s: string): ChainType {\n  switch (s) {\n    case ChainType.MainNet.toString():\n      return ChainType.MainNet;\n    case ChainType.TestNet.toString():\n      return ChainType.TestNet;\n    default:\n      throw new Error(`Unknown chain selected: ${s}`);\n  }\n}\n\nconst Header = (props: IHeaderProps) => {\n  const { connected, address, killSession } = props;\n  return (\n    <SHeader {...props}>\n      {connected && (\n        <SActiveChain>\n          <p>\n            {`Chain `}\n            <select\n              onChange={event => props.chainUpdate(stringToChainType(event.target.value))}\n              value={props.chain}\n            >\n              <option value={ChainType.TestNet}>Algorand TestNet</option>\n              <option value={ChainType.MainNet}>Algorand MainNet</option>\n            </select>\n          </p>\n        </SActiveChain>\n      )}\n      {address && (\n        <SActiveAccount>\n          <SBlockie address={address} />\n          <SAddress connected={connected}>{address}</SAddress>\n          <SDisconnect connected={connected} onClick={killSession}>\n            {\"Disconnect\"}\n          </SDisconnect>\n        </SActiveAccount>\n      )}\n    </SHeader>\n  );\n};\n\nHeader.propTypes = {\n  killSession: PropTypes.func.isRequired,\n  address: PropTypes.string,\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport App from \"./App\";\nimport { globalStyle } from \"./styles\";\nconst GlobalStyle = createGlobalStyle`\n  ${globalStyle}\n`;\n\ndeclare global {\n  // tslint:disable-next-line\n  interface Window {\n    blockies: any;\n  }\n}\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById(\"root\"),\n);\n","import algosdk from \"algosdk\";\nimport { apiGetTxnParams, apiGetApplicationByID, ChainType } from \"./helpers/api\";\n\nconst testAccounts = [\n  algosdk.mnemonicToSecretKey(\n    \"cannon scatter chest item way pulp seminar diesel width tooth enforce fire rug mushroom tube sustain glide apple radar chronic ask plastic brown ability badge\",\n  ),\n  algosdk.mnemonicToSecretKey(\n    \"person congress dragon morning road sweet horror famous bomb engine eager silent home slam civil type melt field dry daring wheel monitor custom above term\",\n  ),\n  algosdk.mnemonicToSecretKey(\n    \"faint protect home drink journey humble tube clinic game rough conduct sell violin discover limit lottery anger baby leaf mountain peasant rude scene abstract casual\",\n  ),\n];\n\nexport function signTxnWithTestAccount(txn: algosdk.Transaction): Uint8Array {\n  const sender = algosdk.encodeAddress(txn.from.publicKey);\n\n  for (const testAccount of testAccounts) {\n    if (testAccount.addr === sender) {\n      return txn.signTxn(testAccount.sk);\n    }\n  }\n\n  throw new Error(`Cannot sign transaction from unknown test account: ${sender}`);\n}\n\nexport interface IScenarioTxn {\n  txn: algosdk.Transaction;\n  signers?: string[];\n  authAddr?: string;\n  message?: string;\n}\n\nexport type ScenarioReturnType = IScenarioTxn[][];\n\nexport class Scenario {\n  public argRequired : string | null;\n  public action : (chain: ChainType, address: string, amount: number | null) => Promise<ScenarioReturnType>;\n}\n\nfunction getUSDCIndex(chain: ChainType): number {\n  if (chain === ChainType.MainNet) {\n    // MainNet USDC\n    return 31566704;\n  }\n\n  if (chain === ChainType.TestNet) {\n    // TestNet USDC\n    return 10458941;\n  }\n\n  throw new Error(`USDC asset not defined for chain ${chain}`);\n}\n\nexport function getZANIndex(chain: ChainType): number {\n  if (chain === ChainType.MainNet) {\n    // MainNet USDC\n    return 101545427;  // TO DO\n  }\n\n  if (chain === ChainType.TestNet) {\n    // TestNet ZAN\n    return 101545427;\n  }\n\n  throw new Error(`ZAN asset not defined for chain ${chain}`);\n}\n\n/*\nfunction getAssetReserve(chain: ChainType): string {\n  if (chain === ChainType.MainNet) {\n    return \"2UEQTE5QDNXPI7M3TU44G6SYKLFWLPQO7EBZM7K7MHMQQMFI4QJPLHQFHM\";\n  }\n\n  if (chain === ChainType.TestNet) {\n    return \"UJBZPEMXLD6KZOLUBUDSZ3DXECXYDADZZLBH6O7CMYXHE2PLTCW44VK5T4\";\n  }\n\n  throw new Error(`Asset reserve not defined for chain ${chain}`);\n}\n*/\n\nexport function getZazzanAppIndex(chain: ChainType): number {\n  if (chain === ChainType.MainNet) {\n    return 101543557;  // TO DO\n  }\n\n  if (chain === ChainType.TestNet) {\n    return 101543557;\n  }\n\n  throw new Error(`App not defined for chain ${chain}`);\n}\n\nexport function getZazzanAppAddress(chain: ChainType): string {\n  if (chain === ChainType.MainNet) {\n    return \"NYH3MFDKHDKFDFM66GKN7EBF4UJRQ52GELWIJZX2VOH6NRTFPYYI7OMNGU\";  // TO DO\n  }\n\n  if (chain === ChainType.TestNet) {\n    return \"NYH3MFDKHDKFDFM66GKN7EBF4UJRQ52GELWIJZX2VOH6NRTFPYYI7OMNGU\";\n  }\n\n  throw new Error(`App not defined for chain ${chain}`);\n}\n\nexport function getZazzanAdminFundAddress(app: any): string {\n  const entries = app.params['global-state'].filter((o: any) => o.key === \"YWRtRnVuZA==\");\n  const adminFund64 = entries[0].value.bytes;\n  const raw = window.atob(adminFund64);\n  const rawLength = raw.length;\n  const array = new Uint8Array(new ArrayBuffer(rawLength));\n  for(let i = 0; i < rawLength; i++) {\n    array[i] = raw.charCodeAt(i);\n  }\n  return algosdk.encodeAddress(array);\n}\n\n/*\nconst singlePayTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 100000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    {\n      txn,\n      message: \"This is a payment transaction that sends 0.1 Algos to yourself.\",\n    },\n  ];\n  return [txnsToSign];\n};\n*/\n\nfunction singleAssetOptInTxn(getAssetIndex : (chain : ChainType) => number, assetName : string) : Scenario {\n    return { argRequired : null, action :\n        async (\n          chain: ChainType,\n          address: string\n        ): Promise<ScenarioReturnType> => {\n          const suggestedParams = await apiGetTxnParams(chain);\n          const assetIndex = getAssetIndex(chain);\n        \n          const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n            from: address,\n            to: address,\n            amount: 0,\n            assetIndex,\n            note: new Uint8Array(Buffer.from(\"example note value\")),\n            suggestedParams,\n          });\n        \n          const txnsToSign = [\n            {\n              txn,\n              message: \"This transaction opts you into the \"+assetName+\" asset if you have not already opted in.\",\n            },\n          ];\n          return [txnsToSign];\n        }\n    };\n}\n\n/*\nconst singleAssetTransferTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n  const assetIndex = getUSDCIndex(chain);\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 1000000,\n    assetIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: \"This transaction will send 1 USDC to yourself.\" }];\n  return [txnsToSign];\n};\n*/\n\n/*\nconst singleAssetCloseTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n  const assetIndex = getUSDCIndex(chain);\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: getAssetReserve(chain),\n    amount: 0,\n    assetIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    {\n      txn,\n      message:\n        \"This transaction will opt you out of the USDC asset. DO NOT submit this to MainNet if you have more than 0 USDC.\",\n    },\n  ];\n  return [txnsToSign];\n};\n*/\n\n/*\nconst singleAppOptIn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getAppIndex(chain);\n\n  const txn = algosdk.makeApplicationOptInTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: \"This transaction will opt you into a test app.\" }];\n  return [txnsToSign];\n};\n*/\n\n/*\nconst singleAppCall: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getAppIndex(chain);\n\n  const txn = algosdk.makeApplicationNoOpTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: \"This transaction will invoke an app call on a test app.\" }];\n  return [txnsToSign];\n};\n*/\n\nconst singleUSDCtoZAN: Scenario =  { argRequired : \"USDC amount\", action : async (\n  chain: ChainType,\n  address: string,\n  amount: number\n): Promise<ScenarioReturnType> => {\n  const params = await apiGetTxnParams(chain);\n\n  const zazzanIndex = getZazzanAppIndex(chain);\n  const zazzanAddress = getZazzanAppAddress(chain);\n  const ZANIndex = getZANIndex(chain);\n  const USDCIndex = getUSDCIndex(chain);\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: zazzanAddress,\n    amount: amount * 1000000,\n    assetIndex: USDCIndex,\n    // note: new Uint8Array(Buffer.from(\"\")),\n    suggestedParams: params\n  });\n\n  const assets = [ZANIndex, USDCIndex];\n\n  const txn2 = algosdk.makeApplicationNoOpTxnFromObject({\n    from: address,\n    appIndex: zazzanIndex,\n    foreignAssets: assets,\n    //  note: new Uint8Array(Buffer.from(\"\")),\n    appArgs: [new Uint8Array(Buffer.from(\"toZAN\"))],\n    suggestedParams: params,\n  });\n\n  /* const txgroup = */ algosdk.assignGroupID([txn1, txn2]);\n\n  console.log(\"fas = \" + txn2.toByte() );\n\n  const txnsToSign = [\n      { txn: txn1, message: \"Transfer USDC to Zazzan App\" },\n      { txn: txn2, message: \"Call toZAN\" },\n    ];\n  return [txnsToSign];\n}};\n\nconst singleZANtoUSDC: Scenario =  { argRequired : \"ZAN amount\", action : async (\n  chain: ChainType,\n  address: string,\n  amount: number\n): Promise<ScenarioReturnType> => {\n  const params = await apiGetTxnParams(chain);\n\n  const zazzanIndex = getZazzanAppIndex(chain);\n  const zazzanAddress = getZazzanAppAddress(chain);\n  const ZANIndex = getZANIndex(chain);\n  const USDCIndex = getUSDCIndex(chain);\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: zazzanAddress,\n    amount: amount * 1000000,\n    assetIndex: ZANIndex,\n    // note: new Uint8Array(Buffer.from(\"\")),\n    suggestedParams: params\n  });\n\n  const assets = [ZANIndex, USDCIndex];\n\n  const app = await apiGetApplicationByID(chain, zazzanIndex);\n  const adminFund = getZazzanAdminFundAddress(app);\n\n  const txn2 = algosdk.makeApplicationNoOpTxnFromObject({\n    from: address,\n    appIndex: zazzanIndex,\n    foreignAssets: assets,\n    accounts: [adminFund],\n    //  note: new Uint8Array(Buffer.from(\"\")),\n    appArgs: [new Uint8Array(Buffer.from(\"toFiat\"))],\n    suggestedParams: params,\n  });\n\n  /* const txgroup = */ algosdk.assignGroupID([txn1, txn2]);\n\n  console.log(\"fas = \" + txn2.toByte() );\n\n  const txnsToSign = [\n      { txn: txn1, message: \"Transfer USDC to Zazzan App\" },\n      { txn: txn2, message: \"Call toZAN\" },\n    ];\n  return [txnsToSign];\n}};\n\n/*\nconst singleAppCloseOut: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getZazzanAppIndex(chain);\n\n  const txn = algosdk.makeApplicationCloseOutTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: \"This transaction will opt you out of the test app.\" }];\n  return [txnsToSign];\n};\n*/\n\n/*\nconst singleAppClearState: Scenario = async (\n  chain: ChainType,\n  address: string,\n  amount: number | null\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getZazzanAppIndex(chain);\n\n  const txn = algosdk.makeApplicationClearStateTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn, message: \"This transaction will forcibly opt you out of the test app.\" },\n  ];\n  return [txnsToSign];\n};\n*/\n\nexport const scenarios: Array<{ name: string; scenario: Scenario }> = [\n  /*\n  {\n    name: \"1. Sign pay txn\",\n    scenario: singlePayTxn,\n  },\n  */\n  {\n    name: \"Opt-in to ZAN asset\",\n    scenario: singleAssetOptInTxn(getZANIndex, \"ZAN\"),\n  },\n  {\n    name: \"Opt-in to USDC asset\",\n    scenario: singleAssetOptInTxn(getUSDCIndex, \"USDC\"),\n  },\n  /*\n  {\n    name: \"3. Sign asset transfer txn\",\n    scenario: singleAssetTransferTxn,\n  },\n  {\n    name: \"4. Sign asset close out txn\",\n    scenario: singleAssetCloseTxn,\n  },\n  {\n    name: \"5. Sign app opt-in txn\",\n    scenario: singleAppOptIn,\n  },\n  {\n    name: \"6. Sign app call txn\",\n    scenario: singleAppCall,\n  },\n  {\n    name: \"7. Sign app close out txn\",\n    scenario: singleAppCloseOut,\n  },\n  {\n    name: \"8. Sign app clear state txn\",\n    scenario: singleAppClearState,\n  },\n  */\n  {\n    name: \"Convert USDC to ZAN\",\n    scenario: singleUSDCtoZAN,\n  },\n  {\n    name: \"Convert ZAN to USDC\",\n    scenario: singleZANtoUSDC,\n  },\n];\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\ninterface IColumnStyleProps {\n  spanHeight: boolean;\n  maxWidth: number;\n  center: boolean;\n}\n\ninterface IColumnProps extends IColumnStyleProps {\n  children: React.ReactNode;\n}\n\nconst SColumn = styled.div<IColumnStyleProps>`\n  position: relative;\n  width: 100%;\n  height: ${({ spanHeight }) => (spanHeight ? \"100%\" : \"auto\")};\n  max-width: ${({ maxWidth }) => `${maxWidth}px`};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: ${({ center }) => (center ? \"center\" : \"flex-start\")};\n`;\n\nconst Column = (props: IColumnProps) => {\n  const { children, spanHeight, maxWidth, center } = props;\n  return (\n    <SColumn {...props} spanHeight={spanHeight} maxWidth={maxWidth} center={center}>\n      {children}\n    </SColumn>\n  );\n};\n\nColumn.propTypes = {\n  children: PropTypes.node.isRequired,\n  spanHeight: PropTypes.bool,\n  maxWidth: PropTypes.number,\n  center: PropTypes.bool,\n};\n\nColumn.defaultProps = {\n  spanHeight: false,\n  maxWidth: 600,\n  center: false,\n};\n\nexport default Column;\n","export function capitalize(string: string): string {\n  return string\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(\" \");\n}\n\nexport function ellipseText(text = \"\", maxLength = 9999): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    text\n      .split(\" \")\n      .filter(word => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .join(\" \") + \"...\";\n  return result;\n}\n\nexport function ellipseAddress(address = \"\", width = 6): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || \"0\";\n  n = n + \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\n  return \"0x\" + hex;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace(\"0x\", \"\");\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = \"\";\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nexport function isMobile(): boolean {\n  let mobile = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4),\n      )\n    ) {\n      return true;\n    } else if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function formatBigNumWithDecimals(num: bigint, decimals: number): string {\n  const singleUnit = BigInt(\"1\" + \"0\".repeat(decimals));\n  const wholeUnits = num / singleUnit;\n  const fractionalUnits = num % singleUnit;\n\n  return wholeUnits.toString() + \".\" + fractionalUnits.toString().padStart(decimals, \"0\");\n}\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\nimport { colors } from \"../styles\";\n\nconst load = keyframes`\n  0% {\n    transform: scale(1.0);\n  }\n  5% {\n    transform: scale(1.0);\n  }\n  50% {\n    transform: scale(0.8);\n  }\n  95% {\n    transform: scale(1.0);\n  }\n  100% {\n    transform: scale(1.0);\n  }\n`;\n\ninterface ILoaderStyleProps {\n  size: number;\n}\n\ninterface ILoaderProps extends ILoaderStyleProps {\n  color: string;\n}\n\nconst SLoader = styled.svg<ILoaderStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  animation: ${load} 1s infinite cubic-bezier(0.25, 0, 0.75, 1);\n  transform: translateZ(0);\n`;\n\nconst Loader = (props: ILoaderProps) => {\n  const { size, color } = props;\n  const rgb = `rgb(${colors[color]})`;\n  return (\n    <SLoader viewBox=\"0 0 186 187\" size={size}>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <path\n          d=\"M60,10.34375 C32.3857625,10.34375 10,32.7295125 10,60.34375 L10,126.34375 C10,153.957987 32.3857625,176.34375 60,176.34375 L126,176.34375 C153.614237,176.34375 176,153.957987 176,126.34375 L176,60.34375 C176,32.7295125 153.614237,10.34375 126,10.34375 L60,10.34375 Z M60,0.34375 L126,0.34375 C159.137085,0.34375 186,27.206665 186,60.34375 L186,126.34375 C186,159.480835 159.137085,186.34375 126,186.34375 L60,186.34375 C26.862915,186.34375 0,159.480835 0,126.34375 L0,60.34375 C0,27.206665 26.862915,0.34375 60,0.34375 Z\"\n          id=\"Rectangle-Copy\"\n          fill={rgb}\n          fillRule=\"nonzero\"\n        />\n        <rect id=\"Rectangle\" fill={rgb} x=\"44\" y=\"44.34375\" width=\"98\" height=\"98\" rx=\"35\" />\n      </g>\n    </SLoader>\n  );\n};\n\nLoader.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  size: 40,\n  color: \"lightBlue\",\n};\n\nexport default Loader;\n","export const colors = {\n  white: \"255, 255, 255\",\n  black: \"0, 0, 0\",\n  dark: \"12, 12, 13\",\n  grey: \"169, 169, 188\",\n  darkGrey: \"113, 119, 138\",\n  lightGrey: \"212, 212, 212\",\n  blue: \"101, 127, 230\",\n  lightBlue: \"64, 153, 255\",\n  yellow: \"250, 188, 45\",\n  orange: \"246, 133, 27\",\n  green: \"84, 209, 146\",\n  pink: \"255, 51, 102\",\n  red: \"214, 75, 71\",\n  purple: \"110, 107, 233\",\n};\n\nexport const fonts = {\n  size: {\n    tiny: \"10px\",\n    small: \"14px\",\n    medium: \"16px\",\n    large: \"18px\",\n    h1: \"50px\",\n    h2: \"40px\",\n    h3: \"32px\",\n    h4: \"24px\",\n    h5: \"20px\",\n    h6: \"16px\"\n  },\n  weight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n  },\n  family: {\n    OpenSans: `\"Open Sans\", sans-serif`,\n  },\n};\n\nexport const transitions = {\n  short: \"all 0.1s ease-in-out\",\n  base: \"all 0.2s ease-in-out\",\n  long: \"all 0.3s ease-in-out\",\n  button: \"all 0.15s ease-in-out\",\n};\n\nexport const shadows = {\n  soft:\n    \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n  medium:\n    \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\n  big: \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\n  hover:\n    \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n};\n\nexport const responsive = {\n  xs: {\n    min: \"min-width: 467px\",\n    max: \"max-width: 468px\",\n  },\n  sm: {\n    min: \"min-width: 639px\",\n    max: \"max-width: 640px\",\n  },\n  md: {\n    min: \"min-width: 959px\",\n    max: \"max-width: 960px\",\n  },\n  lg: {\n    min: \"min-width: 1023px\",\n    max: \"max-width: 1024px\",\n  },\n  xl: {\n    min: \"min-width: 1399px\",\n    max: \"max-width: 1400px\",\n  },\n};\n\nexport const globalStyle = `\n\n  html, body, #root {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: ${fonts.family.OpenSans};\n    font-style: normal;\n    font-stretch: normal;\n    font-weight: ${fonts.weight.normal};\n    font-size: ${fonts.size.medium};\n    background-color: rgb(${colors.white});\n    color: rgb(${colors.dark});\n    overflow-y:auto;\n    text-rendering: optimizeLegibility;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \t-webkit-text-size-adjust: 100%;\n    -webkit-overflow-scrolling: touch;\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;  \n  }\n\n  button {\n    border-style: none;\n    line-height: 1em;\n    background-image: none;\n    outline: 0;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  [tabindex] {\n    outline: none;\n    width: 100%;\n    height: 100%;\n  }\n\n  a, p, h1, h2, h3, h4, h5, h6 {\n  \ttext-decoration: none;\n  \tmargin: 0;\n    padding: 0;\n    margin: 0.2em 0;\n  }\n\n  h1 {\n    font-size: ${fonts.size.h1}\n  }\n  h2 {\n    font-size: ${fonts.size.h2}\n  }\n  h3 {\n    font-size: ${fonts.size.h3}\n  }\n  h4 {\n    font-size: ${fonts.size.h4}\n  }\n  h5 {\n    font-size: ${fonts.size.h5}\n  }\n  h6 {\n    font-size: ${fonts.size.h6}\n  }\n\n  a {\n    background-color: transparent;\n    -webkit-text-decoration-skip: objects;  \n    text-decoration: none;\n    color: inherit;\n    outline: none;\n  }\n\n  b,\n  strong {\n    font-weight: inherit;\n    font-weight: bolder;\n  }\n\n  ul, li {\n  \tlist-style: none;\n  \tmargin: 0;\n  \tpadding: 0;\n  }\n\n  * {\n    box-sizing: border-box !important;\n  }\n\n\n  input {\n    -webkit-appearance: none;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n  }\n\n  input[type=\"color\"],\n  input[type=\"date\"],\n  input[type=\"datetime\"],\n  input[type=\"datetime-local\"],\n  input[type=\"email\"],\n  input[type=\"month\"],\n  input[type=\"number\"],\n  input[type=\"password\"],\n  input[type=\"search\"],\n  input[type=\"tel\"],\n  input[type=\"text\"],\n  input[type=\"time\"],\n  input[type=\"url\"],\n  input[type=\"week\"],\n  select:focus,\n  textarea {\n    font-size: 16px;\n  }\n`;\n","import algosdk from \"algosdk\";\nimport { IAssetData } from \"./types\";\n\nexport enum ChainType {\n  MainNet = \"mainnet\",\n  TestNet = \"testnet\",\n}\n\nconst mainNetClient = new algosdk.Algodv2(\"\", \"https://mainnet-api.algonode.cloud\", \"\");\nconst testNetClient = new algosdk.Algodv2(\"\", \"https://testnet-api.algonode.cloud\", \"\");\n\nfunction clientForChain(chain: ChainType): algosdk.Algodv2 {\n  switch (chain) {\n    case ChainType.MainNet:\n      return mainNetClient;\n    case ChainType.TestNet:\n      return testNetClient;\n    default:\n      throw new Error(`Unknown chain type: ${chain}`);\n  }\n}\n\nexport async function apiGetAccountAssets(\n  chain: ChainType,\n  address: string,\n): Promise<IAssetData[]> {\n  const client = clientForChain(chain);\n\n  const accountInfo = await client\n    .accountInformation(address)\n    .setIntDecoding(algosdk.IntDecoding.BIGINT)\n    .do();\n\n  const algoBalance = accountInfo.amount as bigint;\n  const assetsFromRes: Array<{\n    \"asset-id\": bigint;\n    amount: bigint;\n    creator: string;\n    frozen: boolean;\n  }> = accountInfo.assets;\n\n  const assets: IAssetData[] = assetsFromRes.map(({ \"asset-id\": id, amount, creator, frozen }) => ({\n    id: Number(id),\n    amount,\n    creator,\n    frozen,\n    decimals: 0,\n  }));\n\n  assets.sort((a, b) => a.id - b.id);\n\n  await Promise.all(\n    assets.map(async asset => {\n      const { params } = await client.getAssetByID(asset.id).do();\n      asset.name = params.name;\n      asset.unitName = params[\"unit-name\"];\n      asset.url = params.url;\n      asset.decimals = params.decimals;\n    }),\n  );\n\n  assets.unshift({\n    id: 0,\n    amount: algoBalance,\n    creator: \"\",\n    frozen: false,\n    decimals: 6,\n    name: \"Algo\",\n    unitName: \"Algo\",\n  });\n\n  return assets;\n}\n\nexport async function apiGetAssetByID(\n  chain: ChainType,\n  aid: number,\n): Promise<Record<string, any>> {\n  const client = clientForChain(chain);\n\n  const asset = await client\n    .getAssetByID(aid)\n    .setIntDecoding(algosdk.IntDecoding.BIGINT)\n    .do();\n  return asset;\n}\n\nexport async function apiGetApplicationByID(\n  chain: ChainType,\n  aid: number,\n): Promise<Record<string, any>> {\n  const client = clientForChain(chain);\n\n  const asset = await client\n    .getApplicationByID(aid)\n    // .setIntDecoding(algosdk.IntDecoding.BIGINT)\n    .do();\n  return asset;\n}\n\nexport async function apiGetTxnParams(chain: ChainType): Promise<algosdk.SuggestedParams> {\n  const params = await clientForChain(chain)\n    .getTransactionParams()\n    .do();\n  return params;\n}\n\nexport async function apiSubmitTransactions(\n  chain: ChainType,\n  stxns: Uint8Array[],\n): Promise<number> {\n  const { txId } = await clientForChain(chain)\n    .sendRawTransaction(stxns)\n    .do();\n  return await waitForTransaction(chain, txId);\n}\n\nasync function waitForTransaction(chain: ChainType, txId: string): Promise<number> {\n  const client = clientForChain(chain);\n\n  let lastStatus = await client.status().do();\n  let lastRound = lastStatus[\"last-round\"];\n  while (true) {\n    const status = await client.pendingTransactionInformation(txId).do();\n    if (status[\"pool-error\"]) {\n      throw new Error(`Transaction Pool Error: ${status[\"pool-error\"]}`);\n    }\n    if (status[\"confirmed-round\"]) {\n      return status[\"confirmed-round\"];\n    }\n    lastStatus = await client.statusAfterBlock(lastRound + 1).do();\n    lastRound = lastStatus[\"last-round\"];\n  }\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"./Loader\";\nimport { colors, fonts, shadows, transitions } from \"../styles\";\n\ninterface IButtonStyleProps {\n  fetching: boolean;\n  outline: boolean;\n  type: \"button\" | \"submit\" | \"reset\";\n  color: string;\n  disabled: boolean;\n  icon: any;\n  left: boolean;\n}\n\ninterface IButtonProps extends IButtonStyleProps {\n  children: React.ReactNode;\n  onClick?: any;\n}\n\nconst SIcon = styled.div`\n  position: absolute;\n  height: 15px;\n  width: 15px;\n  margin: 0 8px;\n  top: calc((100% - 15px) / 2);\n`;\n\nconst SHoverLayer = styled.div`\n  transition: ${transitions.button};\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(${colors.white}, 0.1);\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n`;\n\nconst SButton = styled.button<IButtonStyleProps>`\n  transition: ${transitions.button};\n  position: relative;\n  border: none;\n  border-style: none;\n  box-sizing: border-box;\n  background-color: ${({ outline, color }) => (outline ? \"transparent\" : `rgb(${colors[color]})`)};\n  border: ${({ outline, color }) => (outline ? `1px solid rgb(${colors[color]})` : \"none\")};\n  color: ${({ outline, color }) => (outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`)};\n  box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.semibold};\n  padding: ${({ icon, left }) =>\n    icon ? (left ? \"7px 12px 8px 28px\" : \"7px 28px 8px 12px\") : \"8px 12px\"};\n  cursor: ${({ disabled }) => (disabled ? \"auto\" : \"pointer\")};\n  will-change: transform;\n\n  &:disabled {\n    opacity: 0.6;\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      transform: ${({ disabled }) => (!disabled ? \"translateY(-1px)\" : \"none\")};\n      box-shadow: ${({ disabled, outline }) =>\n        !disabled ? (outline ? \"none\" : `${shadows.hover}`) : `${shadows.soft}`};\n    }\n\n    &:hover ${SHoverLayer} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  &:active {\n    transform: ${({ disabled }) => (!disabled ? \"translateY(1px)\" : \"none\")};\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n    color: ${({ outline, color }) =>\n      outline ? `rgb(${colors[color]})` : `rgba(${colors.white}, 0.24)`};\n\n    & ${SIcon} {\n      opacity: 0.8;\n    }\n  }\n\n  & ${SIcon} {\n    right: ${({ left }) => (left ? \"auto\" : \"0\")};\n    left: ${({ left }) => (left ? \"0\" : \"auto\")};\n    display: ${({ icon }) => (icon ? \"block\" : \"none\")};\n    mask: ${({ icon }) => (icon ? `url(${icon}) center no-repeat` : \"none\")};\n    background-color: ${({ outline, color }) =>\n      outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`};\n    transition: 0.15s ease;\n  }\n`;\n\nconst Button = (props: IButtonProps) => (\n  <SButton\n    {...props}\n    type={props.type}\n    outline={props.outline}\n    color={props.color}\n    disabled={props.disabled}\n    icon={props.icon}\n    left={props.left}\n  >\n    <SHoverLayer />\n    <SIcon />\n    {props.fetching ? <Loader size={20} color=\"white\" /> : props.children}\n  </SButton>\n);\n\nButton.defaultProps = {\n  fetching: false,\n  outline: false,\n  type: \"button\",\n  color: \"lightBlue\",\n  disabled: false,\n  icon: null,\n  left: false,\n};\n\nexport default Button;\n"],"sourceRoot":""}